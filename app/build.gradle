plugins {
    id 'com.android.application'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}


apply plugin: 'com.android.application'
apply from: '../jacoco.gradle'

android {
    compileSdk 32


    defaultConfig {
        applicationId "edu.uiuc.cs427app"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    // Disable animation
    // Animation delays can cause test failures on resource constrained virtual devices
    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
}

task enableMockLocationForTestsOnDevice(type: Exec, dependsOn: 'installDebugAndroidTest') {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkDir = properties.getProperty('sdk.dir')
    def adb = "$sdkDir/platform-tools/adb"
    description 'enable mock location on connected android device before executing any android test'
    commandLine "$adb", 'shell', 'appops', 'set', 'edu.uiuc.cs427app', 'android:mock_location', 'allow'
}

afterEvaluate {
    // Note: the app must be already installed on device in order to this to run!
    connectedDebugAndroidTest.dependsOn enableMockLocationForTestsOnDevice
    connectedAndroidTest.dependsOn enableMockLocationForTestsOnDevice
}


// execute android tests before releasing a new apk
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn('enableMockLocationForTestsOnDevice')
        task.dependsOn('testReleaseUnitTest') // Run unit tests for the release build
        task.dependsOn('connectedAndroidTest')
        // Installs and runs instrumentation tests for all flavors on connected devices.

    }
}

dependencies {
    def room_version = "2.4.3"
    def lombok_version = "1.18.24"
    def espresso_version = "3.5.0"

    /** Lombok for automagic getters and setters :) - BEGIN */
    compileOnly "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
    /** Lombok for automagic getters and setters - END */

    /** Guava for ListenableFuture and async computations - BEGIN **/
    implementation "com.google.guava:guava:31.0.1-android"
    implementation "androidx.concurrent:concurrent-futures:1.1.0"
    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-guava:1.6.1"
    /** Guava for ListenableFuture and async computations - END **/

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    /** Android Room library dependencies - BEGIN */
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
//    implementation "androidx.room:room-coroutines:$room_version"
    // for asynchronous write queries
    implementation "androidx.room:room-rxjava3:$room_version"
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration - Commented out as this requires minimum API level 33
    // We are targeting API level 29, so this won't work
    // implementation "androidx.room:room-paging:2.5.0-beta01"
    /** Android Room library dependencies - END */
    implementation 'com.beastwall:localisation:1.0.5'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.android.volley:volley:1.2.1'
    //implementation 'com.google.android.libraries.places:places:1.1.0'
    //implementation 'com.google.android.gms:play-services-places:17.0.0'
    //implementation 'com.google.android.gms:play-services-location:21.0.0'
    implementation 'com.google.android.libraries.places:places:2.6.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    //implementation 'com.google.android.libraries.places:places:2.4.0'
    //implementation 'com.google.android.gms:play-services-places:latest_version'
    implementation "androidx.cardview:cardview:1.0.0"
}
